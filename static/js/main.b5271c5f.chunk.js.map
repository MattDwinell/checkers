{"version":3,"sources":["components/TokenPiece.js","components/Square.js","components/Board.js","components/MoveArrows.js","components/PlayAgain.js","components/Dashboard.js","Utils/CalculateLegalMoves.js","Utils/CalculateGameStatus.js","components/GameEndModal.js","Utils/OriginalBoard.js","App.js","index.js"],"names":["TokenPiece","className","id","pieceColor","setBoard","pieceIsKing","drag","event","dataTransfer","setData","draggable","onDragStart","width","height","viewBox","d","Square","color","number","populated","squareColor","textColor","onDragOver","e","preventDefault","onDrop","target","replace","getData","drop","onClick","console","log","style","backgroundColor","Board","boardState","map","num","index","hasPiece","rowNum","Math","floor","MoveArrows","viewHistory","aria-hidden","focusable","data-prefix","role","fill","PlayAgain","gameOver","resetGame","Dashboard","player","CalculateLegalMoves","goalSquare","startSquare","board","playerOne","valid","jump","jumpedSquare","multiJump","multiJumpOptions","isKing","baseMoveLeft","baseMoveRight","jumpLeft","jumpRight","corners","singleJumpOption","resObject","options","calcSingleJumpOptions","start","baseMove","jumpMove","multi","includes","push","indexOf","CalculateGameStatus","playerOneTurn","winner","forEach","square","moveLeft","moveRight","moveBackLeft","moveBackRight","moveLeftAndRight","GameEndModal","display","document","getElementsByClassName","visibility","originalBoard","App","useState","firstPlayersTurn","setFirstPlayersTurn","historyIndex","history","setHistory","currentHistoryIndex","setCurrentHistoryIndex","allowedMultiJumps","setAllowedMultiJumps","setGameOver","origin","playerOnesPiece","length","parseInt","res","item","gameStatusCheck","direction","ReactDOM","render","StrictMode","getElementById"],"mappings":"sOA+BeA,EA/BI,SAAC,GAA6C,IAMzDC,EANaC,EAA2C,EAA3CA,GAAcC,GAA6B,EAAvCC,SAAuC,EAA7BD,YAAYE,EAAiB,EAAjBA,YACrCC,EAAO,SAACC,GACTA,EAAMC,aAAaC,QAAQ,OAAQP,GACnCK,EAAMC,aAAaC,QAAQ,QAASN,IAQ3C,MAJoB,UAAfA,IAAwBF,EAAY,MACrB,QAAfE,IAAsBF,EAAY,MAClCI,IAAaJ,GAAa,SAE3BI,EAKF,qBAAKJ,UAAS,gBAAaA,GAAaC,GAAIA,EAAIQ,UAAU,OAAOC,YAAe,SAACJ,GAAD,OAASD,EAAKC,IAA9F,SACA,qBAAKN,UAAY,YAAYW,MAAM,YAAYC,OAAO,YAAYC,QAAQ,sBAA1E,SACA,sBAAMC,EAAE,+yBANJ,qBAAKd,UAAS,gBAAaA,GAAaC,GAAIA,EAAIQ,UAAU,OAAOC,YAAe,SAACJ,GAAD,OAASD,EAAKC,OCuBvFS,EAlCA,SAAC,GAAmE,IAAlEC,EAAiE,EAAjEA,MAAOC,EAA0D,EAA1DA,OAAQC,EAAkD,EAAlDA,UAAWf,EAAuC,EAAvCA,SAAUD,EAA6B,EAA7BA,WAAYE,EAAiB,EAAjBA,YAgB7D,IAMIe,EAAuB,UAATH,EAAmB,UAAW,UAE5CI,EAAsB,UAAVJ,EAAoB,QAAU,QAE9C,OACI,qBAAKf,GAAI,SAAWgB,EAAQR,UAAU,QAAQY,WAAY,SAACC,GAAD,OAX7ChB,EAW4DgB,OAV5D,UAAVN,GACHV,EAAMiB,kBAFM,IAACjB,GAWgEkB,OAAQ,SAAClB,GAAD,OAjBzF,SAAcA,GAIVH,EAASG,EAAMmB,OAAOxB,GAAGyB,QAAQ,SAAU,IAAKpB,EAAMC,aAAaoB,QAAQ,QAAQrB,EAAMC,aAAaoB,QAAQ,UAahBC,CAAKtB,IAAQN,UAAY,SAAS6B,QAAW,WAAKC,QAAQC,IAAIb,IAAac,MAAO,CAACC,gBAAiBd,EAAaH,MAAOI,GAAtN,SAEKF,EAAY,cAAC,EAAD,CAAOd,YAAcA,EAAcF,WAAcA,EAAYD,GAAIgB,EAAQd,SAAYA,IAAc,QCpB7G+B,EATD,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,WAAYhC,EAAc,EAAdA,SAGxB,OAAQ,qBAAKH,UAAY,QAAjB,SAEKmC,EAAWC,KAAI,SAACC,EAAKC,GAAN,OAAc,cAAC,EAAD,CAAQrB,OAAQoB,EAAIpB,OAAQf,WAAcmC,EAAInC,WAAYE,YAAeiC,EAAIjC,YAAaD,SAAYA,EAAUa,MAAOqB,EAAIrB,MAAOE,UAAamB,EAAIE,SAAUC,OAAWC,KAAKC,MAAML,EAAIpB,OAAS,IAASqB,SCKxOK,EAXI,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YACjB,OACI,uBAAO5C,UAAY,wBAAnB,UACgB,sBAAM6B,QAAW,kBAAIe,EAAY,cAAa5C,UAAY,oBAA1D,SAA+E,qBAAKA,UAAU,eAAe6C,cAAY,OAAOC,UAAU,QAAQC,cAAY,MAAOC,KAAK,MAAMnC,QAAQ,cAAzG,SAAuH,sBAAMoC,KAAK,eAAenC,EAAE,uYAC9O,sBAAMe,QAAS,kBAAIe,EAAY,SAAQ5C,UAAY,iBACnD,sBAAM6B,QAAS,kBAAIe,EAAY,UAAS5C,UAAY,kBACpD,sBAAM6B,QAAW,kBAAIe,EAAY,YAAW5C,UAAY,qBAAxD,SAA8E,qBAAK6C,cAAY,OAAOC,UAAU,QAASE,KAAK,MAAOnC,QAAQ,cAAcb,UAAU,eAAvF,SAAsG,sBAAMiD,KAAK,eAAenC,EAAE,8YCI7MoC,EAVG,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,UAG1B,OACI,wBAAQvB,QAAWuB,EAAWpD,UAAY,aAA1C,SACKmD,EAAQ,+BCUNE,EAZG,SAAC,GAAgD,IAA/CC,EAA8C,EAA9CA,OAAQV,EAAsC,EAAtCA,YAAaO,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,UAG/C,OADAtB,QAAQC,IAAIoB,GAER,sBAAKnD,UAAY,YAAjB,UACG,uBAAMA,UAAY,wBAAlB,UAA2CmD,EAAQ,cAAmBG,EAAM,wCAA5E,IAA0H,sBAAMtD,UAAYsD,EAAS,QAAU,aAC/J,cAAC,EAAD,CAAYV,YAAeA,IAC3B,cAAC,EAAD,CAAWQ,UAAaA,EAAWD,SAAYA,QC0G3CI,EApHa,SAACC,EAAYC,EAAaC,EAAOC,GACzD,IAAMD,EAAMD,GAAc,MAAQ,CAAEG,OAAO,EAAOC,MAAM,EAAOC,aAAc,KAAMC,WAAW,EAAOC,iBAAiB,GAAIC,QAAO,GACjI,IAKIC,EAAcC,EAAeC,EAAUC,EALvCC,EAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAE1DC,EAAmB,GACnBT,EAAe,GACfU,EAAY,CAAEZ,OAAO,EAAOC,MAAM,EAAOC,aAAc,KAAMC,WAAW,EAAOC,iBAAiB,GAAIC,OAAQP,EAAMD,GAAarD,aAE/HqE,EAAU,GACVd,GACAO,GAAgB,EAChBC,GAAiB,EACjBC,GAAY,GACZC,GAAa,KAEbH,EAAe,EACfC,EAAgB,EAChBC,EAAW,GACXC,EAAY,IAEhB,IAAMK,EAAwB,SAACC,EAAOC,EAAUC,EAAUvB,GAAyB,IAAjBwB,EAAgB,yDAC1ER,EAAQS,SAASJ,EAAMC,IAAaD,EAAOC,GAAY,GAAKD,EAAQC,EAAW,IAAMlB,EAAMiB,EAAMC,GAAUrC,WAAce,GAA+C,QAArCI,EAAMiB,EAAMC,GAAU1E,aAA2BoD,GAAgD,UAAtCI,EAAMiB,EAAQC,GAAU1E,cAA6BwD,EAAMiB,EAAQE,GAAUtC,WACvQuC,GAGDN,EAAUT,WAAY,EACtBS,EAAUR,iBAAiBgB,KAAKL,EAAQE,KAJ/BN,EAAiBS,KAAKL,EAAQE,GAC1Cf,EAAakB,KAAKL,EAAQC,MAsFlC,OA9EGnB,EAAc,IAAM,GAAGgB,EAAQO,KAAKvB,EAAcU,GAClDV,EAAc,IAAM,GAAGgB,EAAQO,KAAKvB,EAAcS,GAClDM,EAAUP,QAAUR,EAAc,GAAK,GAAGgB,EAAQO,KAAKvB,EAAcS,GACrEM,EAAUP,QAAUR,EAAc,GAAK,GAAGgB,EAAQO,KAAKvB,EAAcU,GAW5EO,EAAsBjB,EAAaS,EAAcE,EAAUT,GAC3De,EAAsBjB,EAAaU,EAAeE,EAAWV,GAC1Da,EAAUP,SAETS,EAAsBjB,GAAcU,GAAgBE,EAAWV,GAC/De,EAAsBjB,GAAcS,GAAeE,EAAUT,IAazDc,EAAQM,SAASvB,GAEjBgB,EAAUZ,OAAQ,EACbW,EAAiBQ,SAASvB,KAC/BgB,EAAUZ,OAAQ,EAClBY,EAAUV,aAAeA,EAAaS,EAAiBU,QAAQzB,IAC/DgB,EAAUX,MAAO,EAYdL,EAAa,GAAM,GAClBkB,EAAsBlB,EAAYU,EAAcE,EAAUT,GAAW,GAEtEH,EAAa,GAAK,GACjBkB,EAAsBlB,EAAYW,EAAeE,EAAWV,GAAW,GAExEa,EAAUP,QAAUT,EAAa,GAAI,GACpCkB,EAAsBlB,GAAcW,GAAgBE,EAAWV,GAAW,GAE3Ea,EAAUP,QAAUT,EAAa,GAAK,GACrCkB,EAAsBlB,GAAaU,GAAeE,EAAUT,GAAW,IAS5Ea,EAAUZ,OAjGA,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAiGHmB,SAASvB,KAAiBG,GAAaH,EAAa,IAAM,IAAOG,GAAaH,EAAa,IAAM,KACzHgB,EAAUP,QAAS,GAQhBO,GC7DIU,EAhDa,SAAC/C,EAAYgD,GACrC,IAAMX,EAAY,CAAErB,UAAU,EAAMiC,OAAQD,EAAgB,MAAM,OAC9Db,EAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAyC9D,OAbAxC,QAAQC,IAAIoD,GACZhD,EAAWkD,SAAQ,SAAAC,GACf,GAAIA,EAAO/C,WAAc4C,GAAuC,UAAtBG,EAAOpF,aAA6BiF,GAAuC,QAAtBG,EAAOpF,aA7BjF,SAACoF,GACtB,IAAIjD,EAAMiD,EAAOrE,OACbsE,GAAY,EACZC,GAAa,EACbC,EAAe,EACfC,GAAiB,EAQrB,OAPKP,IACDI,EAAW,EACXC,EAAY,EACZE,GAAiB,EACjBD,GAAgB,GAGhBpD,EAAM,GAAK,GAAKA,EAAMkD,GAAY,GAAKlD,EAAMkD,GAAY,KAA8C,IAAxCpD,EAAWE,EAAMkD,GAAUhD,UAC1FF,EAAM,GAAK,GAAKA,EAAMmD,GAAa,GAAKnD,EAAMmD,GAAa,KAA+C,IAAzCrD,EAAWE,EAAMmD,GAAWjD,aAC7F+C,EAAOlF,aAAeiC,EAAM,GAAK,GAAKA,EAAMoD,GAAgB,GAAKpD,EAAMoD,GAAgB,KAAkD,IAA5CtD,EAAWE,EAAMoD,GAAclD,cAC5H+C,EAAOlF,aAAeiC,EAAM,GAAK,GAAKA,EAAMqD,GAAiB,GAAKrD,EAAMqD,GAAiB,KAAmD,IAA7CvD,EAAWE,EAAMqD,GAAenD,cAG/HF,EAAM,GAAK,GAAKA,EAAkB,EAAXkD,GAAiB,GAAKlD,EAAkB,EAAXkD,GAAiB,KAAQjB,EAAQS,SAAS1C,EAAIkD,KAAqD,IAAxCpD,EAAWE,EAAMkD,GAAUhD,WAAuB4C,GAA2D,QAA1ChD,EAAWE,EAAMkD,GAAUrF,aAA2BiF,GAA2D,UAA1ChD,EAAWE,EAAMkD,GAAUrF,cAA2E,IAA/CiC,EAAWE,EAAkB,EAAXkD,GAAgBhD,cAClVF,EAAM,GAAK,GAAKA,EAAmB,EAAZmD,GAAkB,GAAKnD,EAAmB,EAAZmD,GAAkB,KAAQlB,EAAQS,SAAS1C,EAAImD,KAAuD,IAAzCrD,EAAWE,EAAMmD,GAAWjD,WAAuB4C,GAA4D,QAA3ChD,EAAWE,EAAMmD,GAAWtF,aAA2BiF,GAA4D,UAA3ChD,EAAWE,EAAMmD,GAAWtF,cAA4E,IAAhDiC,EAAWE,EAAmB,EAAZmD,GAAiBjD,cACzV+C,EAAOlF,aAAeiC,EAAM,GAAK,GAAKA,EAAuB,EAAhBqD,GAAsB,GAAKrD,EAAuB,EAAhBqD,GAAsB,KAAQpB,EAAQS,SAAS1C,EAAIqD,KAA+D,IAA7CvD,EAAWE,EAAMqD,GAAenD,WAAuB4C,GAAgE,QAA/ChD,EAAWE,EAAMqD,GAAexF,aAA2BiF,GAAgE,UAA/ChD,EAAWE,EAAMqD,GAAexF,cAAgF,IAApDiC,EAAWE,EAAuB,EAAhBqD,GAAqBnD,cAC3Y+C,EAAOlF,aAAeiC,EAAM,GAAK,GAAKA,EAAsB,EAAfoD,GAAqB,GAAKpD,EAAsB,EAAfoD,GAAqB,KAAQnB,EAAQS,SAAS1C,EAAIoD,KAA6D,IAA5CtD,EAAWE,EAAMoD,GAAclD,WAAuB4C,GAA+D,QAA9ChD,EAAWE,EAAMoD,GAAcvF,aAA2BiF,GAA+D,UAA9ChD,EAAWE,EAAMoD,GAAcvF,cAA+E,IAAnDiC,EAAWE,EAAsB,EAAfoD,GAAoBlD,gBAAxY,EAQkBoD,CAAiBL,GAI3B,OAFAxD,QAAQC,IAAIuD,GACZd,EAAUrB,UAAW,EACdqB,KAMZA,GCzBIoB,EAjBM,SAAC,GAA2B,IAA1BzC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,UAMzByC,EAAU1C,EAASA,SAAW,OAAS,OAE3C,OADArB,QAAQC,IAAIoB,GAER,sBAAKnD,UAAY,YAAYgC,MAAO,CAAC6D,QAASA,GAA9C,UACI,sBAAMhE,QATA,WACMiE,SAASC,uBAAuB,aAAa,GACnD/D,MAAMgE,WAAa,UAODhG,UAAY,cAApC,eACD,wCAAWmD,EAASiC,OAApB,eACA,cAAC,EAAD,CAAWhC,UAAWA,EAAWD,SAAYA,EAASA,eCqDlD8C,EAlEO,CAAC,CAAEhF,OAAQ,EAAGsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,GAChG,CAAEa,OAAQ,EAAGsB,UAAU,EAAMvB,MAAM,QAASd,WAAY,MAAOE,aAAa,GAC5E,CAAEa,OAAQ,EAAGsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,GAC7E,CAAEa,OAAQ,EAAGsB,UAAU,EAAMvB,MAAM,QAASd,WAAY,MAAOE,aAAa,GAC5E,CAAEa,OAAQ,EAAGsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,GAC7E,CAAEa,OAAQ,EAAGsB,UAAU,EAAMvB,MAAM,QAASd,WAAY,MAAOE,aAAa,GAC5E,CAAEa,OAAQ,EAAGsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,GAC7E,CAAEa,OAAQ,EAAGsB,UAAU,EAAMvB,MAAM,QAASd,WAAY,MAAOE,aAAa,GAC5E,CAAEa,OAAQ,EAAGsB,UAAU,EAAMvB,MAAM,QAASd,WAAY,MAAOE,aAAa,GAC5E,CAAEa,OAAQ,EAAGsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,GAC7E,CAAEa,OAAQ,GAAIsB,UAAU,EAAMvB,MAAM,QAASd,WAAY,MAAOE,aAAa,GAC7E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,GAC9E,CAAEa,OAAQ,GAAIsB,UAAU,EAAMvB,MAAM,QAASd,WAAY,MAAOE,aAAa,GAC7E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,GAC9E,CAAEa,OAAQ,GAAIsB,UAAU,EAAMvB,MAAM,QAASd,WAAY,MAAOE,aAAa,GAC7E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,GAC9E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,GAC9E,CAAEa,OAAQ,GAAIsB,UAAU,EAAMvB,MAAM,QAASd,WAAY,MAAOE,aAAa,GAC7E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,GAC9E,CAAEa,OAAQ,GAAIsB,UAAU,EAAMvB,MAAM,QAASd,WAAY,MAAOE,aAAa,GAC7E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,GAC9E,CAAEa,OAAQ,GAAIsB,UAAU,EAAMvB,MAAM,QAASd,WAAY,MAAOE,aAAa,GAC7E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,GAC9E,CAAEa,OAAQ,GAAIsB,UAAU,EAAMvB,MAAM,QAASd,WAAY,MAAOE,aAAa,GAC7E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAM,QAASd,WAAY,KAAME,aAAa,GAC7E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,GAC9E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAM,QAASd,WAAY,KAAME,aAAa,GAC7E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,GAC9E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAM,QAASd,WAAY,KAAME,aAAa,GAC7E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,GAC9E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAM,QAASd,WAAY,KAAME,aAAa,GAC7E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,GAC9E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,GAC9E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAM,QAASd,WAAY,KAAME,aAAa,GAC7E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,GAC9E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAM,QAASd,WAAY,KAAME,aAAa,GAC7E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,GAC9E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAM,QAASd,WAAY,KAAME,aAAa,GAC7E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,GAC9E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAM,QAASd,WAAY,KAAME,aAAa,GAC7E,CAAEa,OAAQ,GAAIsB,UAAU,EAAMvB,MAAM,QAASd,WAAY,QAASE,aAAa,GAC/E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,GAC9E,CAAEa,OAAQ,GAAIsB,UAAU,EAAMvB,MAAM,QAASd,WAAY,QAASE,aAAa,GAC/E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,GAC9E,CAAEa,OAAQ,GAAIsB,UAAU,EAAMvB,MAAM,QAASd,WAAY,QAASE,aAAa,GAC/E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,GAC9E,CAAEa,OAAQ,GAAIsB,UAAU,EAAMvB,MAAM,QAASd,WAAY,QAASE,aAAa,GAC/E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,GAC9E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,GAC9E,CAAEa,OAAQ,GAAIsB,UAAU,EAAMvB,MAAM,QAASd,WAAY,QAASE,aAAa,GAC/E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,GAC9E,CAAEa,OAAQ,GAAIsB,UAAU,EAAMvB,MAAM,QAASd,WAAY,QAASE,aAAa,GAC/E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,GAC9E,CAAEa,OAAQ,GAAIsB,UAAU,EAAMvB,MAAM,QAASd,WAAY,QAASE,aAAa,GAC/E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,GAC9E,CAAEa,OAAQ,GAAIsB,UAAU,EAAMvB,MAAM,QAASd,WAAY,QAASE,aAAa,GAC/E,CAAEa,OAAQ,GAAIsB,UAAU,EAAMvB,MAAM,QAASd,WAAY,QAASE,aAAa,GAC/E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,GAC9E,CAAEa,OAAQ,GAAIsB,UAAU,EAAMvB,MAAM,QAASd,WAAY,QAASE,aAAa,GAC/E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,GAC9E,CAAEa,OAAQ,GAAIsB,UAAU,EAAMvB,MAAM,QAASd,WAAY,QAASE,aAAa,GAC/E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,GAC9E,CAAEa,OAAQ,GAAIsB,UAAU,EAAMvB,MAAM,QAASd,WAAY,QAASE,aAAa,GAC/E,CAAEa,OAAQ,GAAIsB,UAAU,EAAOvB,MAAO,QAASd,WAAY,KAAME,aAAa,ICwBnE8F,MA9Ef,WACE,IADa,EAGmCC,oBAAS,GAH5C,mBAGNC,EAHM,KAGYC,EAHZ,OAIaF,mBAASF,GAJtB,mBAINvC,EAJM,KAICvD,EAJD,OAKiBgG,mBAAS,CAAC,CAAEzC,MAAOA,EAAO4C,aAAc,KALzD,mBAKNC,EALM,KAKGC,EALH,OAMyCL,mBAAS,GANlD,mBAMNM,EANM,KAMeC,EANf,OAOqCP,mBAAS,IAP9C,mBAONQ,EAPM,KAOaC,EAPb,OAQmBT,mBAAS,CAAEhD,UAAU,EAAOiC,OAAQ,OARvD,mBAQNjC,EARM,KAQI0D,EARJ,KAuDPzD,EAAY,WAChBtB,QAAQC,IAAI,cACZsE,GAAoB,GACpBlG,EAAS8F,GACTO,EAAW,CAAC,CAAE9C,MAAOuC,EAAeK,aAAc,KAClDI,EAAuB,GACvBE,EAAqB,IACrBC,EAAY,CAAE1D,UAAU,EAAOiC,OAAQ,OACvBU,SAASC,uBAAuB,aAAa,GACnD/D,MAAMgE,WAAa,WAI/B,OACE,sBAAKhG,UAAU,MAAf,UACE,oBAAIA,UAAU,SAAd,8BACA,cAAC,EAAD,CAAOmC,WAAYuB,EAAOvD,SA9DV,SAACkC,EAAKyE,EAAQC,GAChC,GAAI1E,IAAQyE,GAAWzE,KACE,UAApB0E,IAAoD,IAArBX,GAAoD,QAApBW,IAAkD,IAArBX,KACrE,IAAxB1C,EAAMrB,GAAKE,aACXoE,EAAkBK,OAAS,IAAML,EAAkB5B,SAASkC,SAAS5E,EAAK,SAC1EoE,IAAwBF,EAAQS,OAAS,GAAKT,EAAQS,OAAS,GAAnE,CACA,IAAIE,EAAM3D,EAAoB0D,SAAS5E,EAAK,IAAK4E,SAASH,EAAQ,IAAKpD,EAAO0C,GAC9E,GAAKc,EAAItD,MAAT,CACIsD,EAAInD,UACN6C,EAAqBM,EAAIlD,mBAEzBqC,GAAqBD,GACrBQ,EAAqB,KAGvBzG,EAASuD,EAAMtB,KAAI,SAAC+E,EAAM7E,GAAP,OAAiBA,GAASD,EAAT,2BAAoB8E,GAApB,IAA0B5E,UAAU,EAAMrC,WAAYwD,EAAMoD,GAAQ5G,WAAYE,YAAc8G,EAAIjD,SAAY3B,GAASwE,GAA2F,GAAZI,EAAIrD,MAAgBvB,IAAU4E,EAAIpD,aAA1H,2BAAuBqD,GAAvB,IAA6B5E,UAAU,EAAOrC,WAAY,KAAME,aAAa,IAAkI+G,MAEjWX,EAAW,GAAD,mBAAKD,GAAL,CAAc,CAAE7C,MAAOA,EAAMtB,KAAI,SAAC+E,EAAM7E,GAAP,OAAiBA,GAASD,EAAT,2BAAoB8E,GAApB,IAA0B5E,UAAU,EAAMrC,WAAYwD,EAAMoD,GAAQ5G,WAAYE,YAAc8G,EAAIjD,SAAY3B,GAASwE,IAA2F,IAAbI,EAAIrD,MAAiBvB,GAAS4E,EAAIpD,aAAzH,2BAAuBqD,GAAvB,IAA6B5E,UAAU,EAAOrC,WAAY,KAAME,aAAa,IAAgI+G,KAAOb,aAAcG,EAAsB,MAClaC,EAAuBD,EAAsB,GAC7C,IAAIW,EAAkBlC,EAAoBxB,EAAMtB,KAAI,SAAC+E,EAAM7E,GAAP,OAAiBA,GAASD,EAAT,2BAAoB8E,GAApB,IAA0B5E,UAAU,EAAMrC,WAAYwD,EAAMoD,GAAQ5G,WAAYE,YAAc8G,EAAIjD,SAAY3B,GAASwE,GAA2F,GAAZI,EAAIrD,MAAgBvB,IAAU4E,EAAIpD,aAA1H,2BAAuBqD,GAAvB,IAA6B5E,UAAU,EAAOrC,WAAY,KAAME,aAAa,IAAkI+G,MAAQf,IACzW,IAA7BgB,EAAgBjE,UAClB0D,EAAYO,QA0CZ,cAAC,EAAD,CAAWhE,UAAaA,EAAWE,OAAQ8C,EAAkBjD,SAAUA,EAASA,SAAUP,YAtCtE,SAACyE,GACA,IAAnBd,EAAQS,SACK,QAAbK,GAAuBZ,EAAsB,IAC/CtG,EAASoG,EAAQE,EAAsB,GAAG/C,OAC1CgD,EAAuBD,EAAsB,IAG9B,WAAbY,IACFX,EAAuBH,EAAQS,OAAS,GACxC7G,EAASoG,EAAQA,EAAQS,OAAS,GAAGtD,QAEtB,SAAb2D,GAAwBZ,EAAsBF,EAAQS,OAAS,IACjE7G,EAASoG,EAAQE,EAAsB,GAAG/C,OAC1CgD,EAAuBD,EAAsB,IAG9B,aAAbY,IACFlH,EAASoG,EAAQ,GAAG7C,OACpBgD,EAAuB,QAqBvB,cAAC,EAAD,CAActD,UAAaA,EAAWD,SAAUA,QC7EtDmE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1B,SAAS2B,eAAe,W","file":"static/js/main.b5271c5f.chunk.js","sourcesContent":["const TokenPiece = ({id, setBoard, pieceColor, pieceIsKing}) => {\r\n    const drag = (event)=>{\r\n         event.dataTransfer.setData(\"text\", id);\r\n         event.dataTransfer.setData(\"color\", pieceColor);\r\n        // console.log(event.target.id);\r\n    }\r\n    let className;\r\n    if(pieceColor === 'black') className = 'p1';\r\n    if(pieceColor === 'red') className = 'p2';\r\n    if(pieceIsKing) className += ' king';\r\n// console.log(className);\r\n  if(!pieceIsKing)  return (\r\n        <div className = {`piece ${className}`} id={id} draggable=\"true\" onDragStart = {(event)=>drag(event)} >\r\n        </div>\r\n    );\r\n  return (\r\n    <div className = {`piece ${className}`} id={id} draggable=\"true\" onDragStart = {(event)=>drag(event)} >\r\n    <svg className = 'king-icon' width=\"184.099px\" height=\"184.099px\" viewBox=\"0 0 184.099 184.099\">\r\n    <path d=\"M182.23,54.814c-1.675-1.258-3.982-1.245-5.633,0.027l-48.457,36.991L96.337,19.979c-1.504-3.386-7.055-3.386-8.564,0\r\n            l-32.175,72.68L7.563,54.878c-1.659-1.297-3.979-1.333-5.669-0.088c-1.696,1.254-2.338,3.492-1.577,5.443l33.372,86.229\r\n            c0.691,1.803,2.43,2.984,4.357,2.984h108.009c1.942,0,3.666-1.176,4.36-2.984l33.368-86.229\r\n            C184.538,58.282,183.905,56.068,182.23,54.814z M142.852,140.099h-101.6L15.193,72.774l39.357,30.948\r\n            c1.13,0.895,2.606,1.218,4.022,0.853c1.404-0.342,2.564-1.315,3.151-2.643l30.333-68.516l29.928,67.626\r\n            c0.591,1.304,1.729,2.277,3.118,2.631c1.388,0.365,2.861,0.061,4.006-0.816l39.981-30.521L142.852,140.099z M150.244,161.983\r\n            c0,2.582-2.095,4.677-4.677,4.677H38.526c-2.582,0-4.676-2.095-4.676-4.677s2.095-4.677,4.676-4.677h107.041\r\n            C148.155,157.307,150.244,159.401,150.244,161.983z\"/>\r\n            </svg>\r\n            </div>\r\n  )\r\n}\r\n\r\nexport default TokenPiece\r\n","import Token from './TokenPiece';\r\nconst Square = ({color, number, populated, setBoard, pieceColor, pieceIsKing}) => {\r\n    // console.log(color);\r\n    // const drop=(event)=>{\r\n    //     if(color == 'black'){\r\n    //     event.preventDefault();\r\n    //     let data = event.dataTransfer.getData(\"text\");\r\n    //     event.target.appendChild(document.getElementById(data))\r\n    //     // setBoard(number);\r\n    //     }\r\n    // }\r\n    function drop(event){\r\n      //  console.log(event.target.id);\r\n      //  console.log(event.dataTransfer.getData('text'));\r\n        // console.log(event.dataTransfer.getData('color'));\r\n        setBoard(event.target.id.replace('square', ''), event.dataTransfer.getData('text'),event.dataTransfer.getData('color') );\r\n    }\r\n    const allowDrop=(event)=>{\r\n        if(color === 'black'){\r\n        event.preventDefault();\r\n        \r\n        }\r\n    }\r\n    let squareColor = color ==='black' ? '#954535': '#d2a56d' ;\r\n  //  let bg = solid ? 'black' : 'white';\r\n    let textColor = color === 'black' ? 'white' : 'black';\r\n    \r\n    return (\r\n        <div id={'square' + number} draggable='false' onDragOver={(e)=>allowDrop(e)} onDrop={(event)=>drop(event)} className = 'square' onClick = {()=>{console.log(populated)}} style={{backgroundColor: squareColor, color: textColor }} >\r\n            {/* { number } */}\r\n            {populated ? <Token pieceIsKing ={pieceIsKing}  pieceColor = {pieceColor} id={number} setBoard = {setBoard}/> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Square\r\n","import Square from './Square';\r\nconst Board = ({boardState, setBoard}) => {\r\n    // const rowCount = [0,1,2,3,4,5,6,7]\r\n    // const startingNums = [1,3,5,7,8,10,12,14,17,19,21,23,56,58,60,62,49,51,53,55,40,42,44,46];\r\n    return (<div className = 'board'>\r\n      {/* { rowCount.map((num, index)=><BoardRow startingNums = {startingNums} rowNum = {num} key={index}/>)} */}\r\n                {boardState.map((num, index)=><Square number={num.number} pieceColor = {num.pieceColor} pieceIsKing = {num.pieceIsKing} setBoard = {setBoard} color={num.color} populated = {num.hasPiece} rowNum = { Math.floor(num.number / 8)} key={index} />)}\r\n        </div>\r\n    )\r\n}\r\nexport default Board\r\n","const MoveArrows = ({viewHistory}) => {\r\n    return (\r\n        <span  className = 'move-arrows grid-item'>\r\n                        <span onClick = {()=>viewHistory('beginning')}className = 'double-arrow-left' ><svg className=\"double-arrow\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\"  role=\"img\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M34.5 239L228.9 44.7c9.4-9.4 24.6-9.4 33.9 0l22.7 22.7c9.4 9.4 9.4 24.5 0 33.9L131.5 256l154 154.7c9.3 9.4 9.3 24.5 0 33.9l-22.7 22.7c-9.4 9.4-24.6 9.4-33.9 0L34.5 273c-9.3-9.4-9.3-24.6 0-34zm192 34l194.3 194.3c9.4 9.4 24.6 9.4 33.9 0l22.7-22.7c9.4-9.4 9.4-24.5 0-33.9L323.5 256l154-154.7c9.3-9.4 9.3-24.5 0-33.9l-22.7-22.7c-9.4-9.4-24.6-9.4-33.9 0L226.5 239c-9.3 9.4-9.3 24.6 0 34z\"></path></svg></span>\r\n            <span onClick={()=>viewHistory('left')}className = 'chevron left'></span>\r\n            <span onClick={()=>viewHistory('right')}className = 'chevron right'></span>\r\n            <span onClick = {()=>viewHistory('present')}className = 'double-arrow-right' ><svg aria-hidden=\"true\" focusable=\"false\"  role=\"img\"  viewBox=\"0 0 512 512\" className=\"double-arrow\"><path fill=\"currentColor\" d=\"M477.5 273L283.1 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.7-22.7c-9.4-9.4-9.4-24.5 0-33.9l154-154.7-154-154.7c-9.3-9.4-9.3-24.5 0-33.9l22.7-22.7c9.4-9.4 24.6-9.4 33.9 0L477.5 239c9.3 9.4 9.3 24.6 0 34zm-192-34L91.1 44.7c-9.4-9.4-24.6-9.4-33.9 0L34.5 67.4c-9.4 9.4-9.4 24.5 0 33.9l154 154.7-154 154.7c-9.3 9.4-9.3 24.5 0 33.9l22.7 22.7c9.4 9.4 24.6 9.4 33.9 0L285.5 273c9.3-9.4 9.3-24.6 0-34z\" ></path></svg></span>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default MoveArrows\r\n","const PlayAgain = ({gameOver, resetGame}) => {\r\n    let display = gameOver ? 'inherit' : 'none';\r\n    // style={{display: display}}\r\n    return (\r\n        <button onClick = {resetGame} className = 'play-again' >\r\n            {gameOver ? `Play Again` : `Restart Game`}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default PlayAgain\r\n","//import woodBackground from './../images/wood_background_one.jpg';\r\nimport MoveArrows from './MoveArrows'; \r\nimport PlayAgain from './PlayAgain';\r\nconst Dashboard = ({player, viewHistory, gameOver, resetGame}) => {\r\n    // style = {{backgroundImage: `url(${woodBackground})`}}\r\n    console.log(gameOver);\r\n    return (\r\n        <div className = 'dashboard'  >\r\n           <span className = 'player-info grid-item'>{gameOver ? `Game over! ` : player ? `Player one's turn` : `Player two's turn`} <span className ={player ? 'p1 ex' : 'p2 ex'} ></span></span> \r\n           <MoveArrows viewHistory = {viewHistory} />\r\n           <PlayAgain resetGame = {resetGame} gameOver = {gameOver}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","const CalculateLegalMoves = (goalSquare, startSquare, board, playerOne) => {\r\n    if( ! board[startSquare] )return  { valid: false, jump: false, jumpedSquare: null, multiJump: false, multiJumpOptions:[], isKing:false };\r\n    let corners = [1, 3, 5, 7, 8, 23, 24, 39, 40, 55, 56, 58, 60, 62];\r\n    let edges  = [1,3,5,7,56,58,60,62];\r\n    let singleJumpOption = [];\r\n    let jumpedSquare = [];\r\n    let resObject = { valid: false, jump: false, jumpedSquare: null, multiJump: false, multiJumpOptions:[], isKing: board[startSquare].pieceIsKing };\r\n    let baseMoveLeft, baseMoveRight, jumpLeft, jumpRight, baseBackLeft, baseBackRight, jumpBackLeft, jumpBackRight;\r\n    let options = [];\r\n    if (playerOne) {\r\n        baseMoveLeft = -9\r\n        baseMoveRight = -7;\r\n        jumpLeft = -18;\r\n        jumpRight = -14;\r\n    } else {\r\n        baseMoveLeft = 7;\r\n        baseMoveRight = 9;\r\n        jumpLeft = 14;\r\n        jumpRight = 18;\r\n    }\r\n    const calcSingleJumpOptions = (start, baseMove, jumpMove, player, multi = false)=>{\r\n        if(!corners.includes(start+baseMove) && start+ baseMove >= 0 && start + baseMove < 64 && board[start+baseMove].hasPiece && ((player && board[start+baseMove].pieceColor === 'red') || (!player && board[start + baseMove].pieceColor ==='black')) && ! board[start + jumpMove].hasPiece ){\r\n           if(! multi){ singleJumpOption.push(start + jumpMove);\r\n            jumpedSquare.push(start + baseMove);\r\n           }else{\r\n               resObject.multiJump = true;\r\n               resObject.multiJumpOptions.push(start + jumpMove);\r\n           }\r\n        }\r\n    }\r\n\r\n    if(startSquare % 8 !== 7) options.push(startSquare + baseMoveRight);\r\n    if(startSquare % 8 !== 0) options.push(startSquare + baseMoveLeft);\r\n    if(resObject.isKing && startSquare % 8 != 7) options.push(startSquare - baseMoveLeft);\r\n    if(resObject.isKing && startSquare % 8 != 0) options.push(startSquare - baseMoveRight);\r\n    //jump logic\r\n    /*if(! corners.includes(startSquare + baseMoveLeft)){\r\n        //check if the piece in the middle is an opponent's piece\r\n        // console.log('middle square info');\r\n        // console.log(board[startSquare + baseMoveLeft]);\r\n        if(startSquare + baseMoveLeft >= 0 && startSquare + baseMoveLeft < 64 && board[startSquare + baseMoveLeft].hasPiece && ((playerOne && board[startSquare + baseMoveLeft].pieceColor === 'red') || (!playerOne && board[startSquare + baseMoveLeft].pieceColor === 'black') ) && board[startSquare + jumpLeft].hasPiece === false){\r\n            singleJumpOption.push(startSquare + jumpLeft);\r\n            jumpedSquare.push(startSquare + baseMoveLeft);\r\n        }\r\n    }*/\r\ncalcSingleJumpOptions(startSquare, baseMoveLeft, jumpLeft, playerOne);\r\ncalcSingleJumpOptions(startSquare, baseMoveRight, jumpRight, playerOne);\r\nif(resObject.isKing){\r\n //   console.log('king move');\r\n    calcSingleJumpOptions(startSquare, -baseMoveRight, -jumpRight, playerOne);\r\n    calcSingleJumpOptions(startSquare, -baseMoveLeft, -jumpLeft, playerOne);\r\n}else{\r\n  //  console.log('not king move')\r\n}\r\n// console.log(singleJumpOption);\r\n// console.log(jumpedSquare);\r\n   /* if( ! corners.includes(startSquare + baseMoveRight)){\r\n        if( startSquare + baseMoveLeft >= 0 && startSquare + baseMoveLeft < 64 && board[startSquare + baseMoveRight].hasPiece && ((playerOne && board[startSquare + baseMoveRight].pieceColor === 'red') || (!playerOne && board[startSquare + baseMoveRight].pieceColor === 'black') ) && board[startSquare + jumpRight].hasPiece === false){\r\n            singleJumpOption.push(startSquare + jumpRight);\r\n            jumpedSquare.push(startSquare + baseMoveRight);\r\n        }\r\n    }*/\r\n\r\n    if (options.includes(goalSquare)) {\r\n     //   console.log('valid');\r\n        resObject.valid = true;     \r\n    }else if(singleJumpOption.includes(goalSquare)){\r\n        resObject.valid = true;\r\n        resObject.jumpedSquare = jumpedSquare[singleJumpOption.indexOf(goalSquare)];\r\n        resObject.jump = true;\r\n        //check if another jump is possible. if so, return multi-jump set to true and don't change the turn.\r\n        //checking for left multi jump, then right multijump\r\n        /*if(goalSquare % 8 != 0   && goalSquare + jumpLeft >= 0 && goalSquare + jumpLeft <= 63 && ! corners.includes(goalSquare + baseMoveLeft) && board[goalSquare + jumpLeft].hasPiece === false && board[goalSquare + baseMoveLeft].hasPiece === true && ((board[goalSquare + baseMoveLeft].pieceColor ==='red' && playerOne == true)||(board[goalSquare + baseMoveLeft].pieceColor == 'black' && ! playerOne)) ){\r\n            resObject.multiJump = true;\r\n            resObject.multiJumpOptions.push(goalSquare + jumpLeft );\r\n        }\r\n        if(goalSquare % 8 != 7   && goalSquare + jumpRight >= 0 && goalSquare + jumpRight <= 63 && ! corners.includes(goalSquare + baseMoveRight) && board[goalSquare + jumpRight].hasPiece === false && board[goalSquare + baseMoveRight].hasPiece === true && ((board[goalSquare + baseMoveRight].pieceColor ==='red' && playerOne)||(board[goalSquare + baseMoveRight].pieceColor == 'black' && ! playerOne)) ){\r\n            resObject.multiJump = true;\r\n            resObject.multiJumpOptions.push(goalSquare + jumpRight );\r\n        }*/\r\n        //calculating left multijumps\r\n        if(goalSquare % 8 !=  0){\r\n            calcSingleJumpOptions(goalSquare, baseMoveLeft, jumpLeft, playerOne, true );\r\n        }\r\n        if(goalSquare % 8 != 7){\r\n            calcSingleJumpOptions(goalSquare, baseMoveRight, jumpRight, playerOne, true );\r\n        }\r\n        if(resObject.isKing && goalSquare % 8!= 0){\r\n            calcSingleJumpOptions(goalSquare, - baseMoveRight, -jumpRight, playerOne, true);\r\n        }\r\n        if(resObject.isKing && goalSquare % 8 != 7){\r\n            calcSingleJumpOptions(goalSquare, -baseMoveLeft, -jumpLeft, playerOne, true);\r\n        }\r\n\r\n    } else {\r\n      //  console.log('invalid');\r\n     //   console.log(options);\r\n     //   console.log(goalSquare);\r\n      //  console.log(options.includes(goalSquare));\r\n    }\r\n    if(resObject.valid && edges.includes(goalSquare) && ((playerOne && goalSquare % 2 === 1 || (!playerOne && goalSquare % 2 === 0)))){\r\n        resObject.isKing = true;\r\n     //   console.log('king me');\r\n    }else if(playerOne){\r\n    //   console.log(resObject.valid);\r\n     //   console.log(edges.includes(goalSquare));\r\n      //  console.log(((playerOne && goalSquare % 2 === 1 || (!playerOne && goalSquare % 2 === 0))));\r\n    }\r\n  //  console.log(options);\r\n    return resObject;\r\n    // console.log(board);\r\n    // console.log(playerOne);\r\n    // console.log(goalSquare);\r\n    // console.log(startSquare);\r\n}\r\n\r\nexport default CalculateLegalMoves\r\n","const CalculateGameStatus = (boardState, playerOneTurn) => {\r\n    const resObject = { gameOver: true, winner: playerOneTurn ? 'two':'one'   };\r\n    let corners = [1, 3, 5, 7, 8, 23, 24, 39, 40, 55, 56, 58, 60, 62];\r\n    const moveLeftAndRight = (square) => {\r\n        let num = square.number;\r\n        let moveLeft = -9;\r\n        let moveRight = -7;\r\n        let moveBackLeft = 7;\r\n        let moveBackRight = -9;\r\n        if (!playerOneTurn) {\r\n            moveLeft = 7\r\n            moveRight = 9;\r\n            moveBackRight = -7\r\n            moveBackLeft = -9\r\n        }\r\n        //try moving left and right, no jump\r\n        if (num % 8 != 0 && num + moveLeft >= 0 && num + moveLeft <= 64 && boardState[num + moveLeft].hasPiece === false) return true;\r\n        if (num % 8 != 7 && num + moveRight >= 0 && num + moveRight <= 64 && boardState[num + moveRight].hasPiece === false) return true;\r\n        if (square.pieceIsKing && num % 8 != 0 && num + moveBackLeft >= 0 && num + moveBackLeft <= 64 && boardState[num + moveBackLeft].hasPiece === false) return true;\r\n        if (square.pieceIsKing && num % 8 != 7 && num + moveBackRight >= 0 && num + moveBackRight <= 64 && boardState[num + moveBackRight].hasPiece === false) return true;\r\n\r\n        //try moving left and right via jumping. Ugly, but can clean up later into a code that just takes in parameters of move directions & player\r\n        if (num % 8 != 0 && num + (moveLeft * 2) >= 0 && num + (moveLeft * 2) <= 64 && ! corners.includes(num+moveLeft) && boardState[num + moveLeft].hasPiece === true && ((playerOneTurn && boardState[num + moveLeft].pieceColor === 'red') || (!playerOneTurn && boardState[num + moveLeft].pieceColor === 'black')) && boardState[num + (moveLeft * 2 )].hasPiece === false ) return true;\r\n        if (num % 8 != 7 && num + (moveRight * 2) >= 0 && num + (moveRight * 2) <= 64 && ! corners.includes(num+moveRight) && boardState[num + moveRight].hasPiece === true && ((playerOneTurn && boardState[num + moveRight].pieceColor === 'red') || (!playerOneTurn && boardState[num + moveRight].pieceColor === 'black')) && boardState[num + (moveRight * 2 )].hasPiece === false ) return true;\r\n        if (square.pieceIsKing && num % 8 != 7 && num + (moveBackRight * 2) >= 0 && num + (moveBackRight * 2) <= 64 && ! corners.includes(num+moveBackRight) && boardState[num + moveBackRight].hasPiece === true && ((playerOneTurn && boardState[num + moveBackRight].pieceColor === 'red') || (!playerOneTurn && boardState[num + moveBackRight].pieceColor === 'black')) && boardState[num + (moveBackRight * 2 )].hasPiece === false ) return true;\r\n        if (square.pieceIsKing && num % 8 != 0 && num + (moveBackLeft * 2) >= 0 && num + (moveBackLeft * 2) <= 64 && ! corners.includes(num+moveBackLeft) && boardState[num + moveBackLeft].hasPiece === true && ((playerOneTurn && boardState[num + moveBackLeft].pieceColor === 'red') || (!playerOneTurn && boardState[num + moveBackLeft].pieceColor === 'black')) && boardState[num + (moveBackLeft * 2 )].hasPiece === false ) return true;\r\n\r\n        \r\n    }\r\n\r\n    console.log(playerOneTurn);\r\n    boardState.forEach(square => {\r\n        if (square.hasPiece && ((playerOneTurn && square.pieceColor === 'black') || (!playerOneTurn && square.pieceColor === 'red'))) {\r\n            let canMove = moveLeftAndRight(square);\r\n            if (canMove) {\r\n                console.log(square);\r\n                resObject.gameOver = false;\r\n                return resObject\r\n            }\r\n\r\n        }\r\n    });\r\n    //if no moves, return res object with game over set to true\r\n    return resObject;\r\n\r\n\r\n}\r\n\r\nexport default CalculateGameStatus\r\n","import PlayAgain from './PlayAgain';\r\nconst GameEndModal = ({gameOver, resetGame}) => {\r\n    const close = ()=>{\r\n        let hideModal = document.getElementsByClassName('end-modal')[0];\r\n        hideModal.style.visibility = 'hidden';\r\n    }\r\n\r\n    let display = gameOver.gameOver ? 'flex' : 'none';\r\n    console.log(gameOver);\r\n    return (\r\n        <div className = 'end-modal' style={{display: display}}>\r\n            <span onClick = {close} className = 'close-modal'>X</span>\r\n           <p>Player {gameOver.winner} has won!</p>\r\n           <PlayAgain resetGame={resetGame} gameOver = {gameOver.gameOver}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameEndModal\r\n","const originalBoard = [{ number: 0, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 1, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 2, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 3, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 4, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 5, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 6, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 7, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 8, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 9, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 10, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 11, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 12, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 13, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 14, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 15, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 16, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 17, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 18, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 19, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 20, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 21, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 22, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 23, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 24, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 25, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 26, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 27, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 28, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 29, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 30, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 31, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 32, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 33, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 34, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 35, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 36, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 37, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 38, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 39, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 40, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 41, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 42, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 43, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 44, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 45, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 46, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 47, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 48, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 49, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 50, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 51, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 52, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 53, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 54, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 55, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 56, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 57, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 58, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 59, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 60, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 61, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 62, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 63, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false }];\r\n\r\n\r\nexport default originalBoard\r\n","import './App.css';\nimport Board from './components/Board'\nimport { useState } from 'react'\nimport Dashboard from './components/Dashboard';\nimport CalculateLegalMoves from './Utils/CalculateLegalMoves';\nimport CalculateGameStatus from './Utils/CalculateGameStatus';\nimport GameEndModal from './components/GameEndModal';\nimport originalBoard from './Utils/OriginalBoard';\n\nfunction App() {\n  let white = 'white';\n  let black = 'black';\n  const [firstPlayersTurn, setFirstPlayersTurn] = useState(true);\n  const [board, setBoard] = useState(originalBoard);\n  const [history, setHistory] = useState([{ board: board, historyIndex: 0 }]);\n  const [currentHistoryIndex, setCurrentHistoryIndex] = useState(0);\n  const [allowedMultiJumps, setAllowedMultiJumps] = useState([]);\n  const [gameOver, setGameOver] = useState({ gameOver: false, winner: null });\n  const attemptMove = (num, origin, playerOnesPiece) => {\n    if (num === origin || !num) return;\n    if ((playerOnesPiece === 'black' && firstPlayersTurn === false) || (playerOnesPiece === 'red' && firstPlayersTurn === true)) return;\n    if (board[num].hasPiece === true) return;\n    if (allowedMultiJumps.length > 0 && !allowedMultiJumps.includes(parseInt(num, 10))) return;\n    if (currentHistoryIndex !== history.length - 1 && history.length > 0) return;\n    let res = CalculateLegalMoves(parseInt(num, 10), parseInt(origin, 10), board, firstPlayersTurn);\n    if (!res.valid) return;\n    if (res.multiJump) {\n      setAllowedMultiJumps(res.multiJumpOptions);\n    } else {\n      setFirstPlayersTurn(!firstPlayersTurn);\n      setAllowedMultiJumps([]);\n    }\n\n    setBoard(board.map((item, index) => index == num ? { ...item, hasPiece: true, pieceColor: board[origin].pieceColor, pieceIsKing: (res.isKing) } : index == origin ? { ...item, hasPiece: false, pieceColor: null, pieceIsKing: false } : (res.jump == true && index === res.jumpedSquare) ? { ...item, hasPiece: false, pieceColor: null, pieceIsKing: false } : item))\n\n    setHistory([...history, { board: board.map((item, index) => index == num ? { ...item, hasPiece: true, pieceColor: board[origin].pieceColor, pieceIsKing: (res.isKing) } : index == origin ? { ...item, hasPiece: false, pieceColor: null, pieceIsKing: false } : res.jump === true && index == res.jumpedSquare ? { ...item, hasPiece: false, pieceColor: null, pieceIsKing: false } : item), historyIndex: currentHistoryIndex + 1 }]);\n    setCurrentHistoryIndex(currentHistoryIndex + 1);\n    let gameStatusCheck = CalculateGameStatus(board.map((item, index) => index == num ? { ...item, hasPiece: true, pieceColor: board[origin].pieceColor, pieceIsKing: (res.isKing) } : index == origin ? { ...item, hasPiece: false, pieceColor: null, pieceIsKing: false } : (res.jump == true && index === res.jumpedSquare) ? { ...item, hasPiece: false, pieceColor: null, pieceIsKing: false } : item), !firstPlayersTurn);\n    if (gameStatusCheck.gameOver === true) {\n      setGameOver(gameStatusCheck);\n    }\n\n  }\n  const traverseHistory = (direction) => {\n    if (history.length === 1) return;\n    if (direction == 'left' && currentHistoryIndex > 0) {\n      setBoard(history[currentHistoryIndex - 1].board);\n      setCurrentHistoryIndex(currentHistoryIndex - 1);\n\n    }\n    if (direction == 'present') {\n      setCurrentHistoryIndex(history.length - 1);\n      setBoard(history[history.length - 1].board);\n    }\n    if (direction == 'right' && currentHistoryIndex < history.length - 1) {\n      setBoard(history[currentHistoryIndex + 1].board);\n      setCurrentHistoryIndex(currentHistoryIndex + 1);\n    }\n\n    if (direction == 'beginning') {\n      setBoard(history[0].board);\n      setCurrentHistoryIndex(0);\n    }\n  }\n  const resetGame = ()=>{\n    console.log('reset game');\n    setFirstPlayersTurn(true);\n    setBoard(originalBoard);\n    setHistory([{ board: originalBoard, historyIndex: 0 }]);\n    setCurrentHistoryIndex(0);\n    setAllowedMultiJumps([]);\n    setGameOver({ gameOver: false, winner: null });\n    let hideModal = document.getElementsByClassName('end-modal')[0];\n    hideModal.style.visibility = 'visible';\n  }\n\n\n  return (\n    <div className=\"App\">\n      <h2 className='header'>Classic Checkers</h2>\n      <Board boardState={board} setBoard={attemptMove} />\n      <Dashboard resetGame = {resetGame} player={firstPlayersTurn} gameOver={gameOver.gameOver} viewHistory={traverseHistory} />\n      <GameEndModal resetGame = {resetGame} gameOver={gameOver} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}